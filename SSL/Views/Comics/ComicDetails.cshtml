@using Newtonsoft.Json
@*@using SSL.Models

    @using SSL.ViewModel*@
@using System.Web.Routing;
@model SSL.ViewModel.ComicFormViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ComicDetails</title>


    <link rel="icon" href="/Images/billyboylogo.png" type="image/x-icon">
    <!--GOOGLE FONTS -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;500;600;700;800;900;1000&display=swap" rel="stylesheet">
    <!--OWL CAROUSEL -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" integrity="sha512-tS3S5qG0BlhnQROyJXvNjeEM4UpMXHrQfTGmbQ1gKmelCxlSEBUaxhRBj/EFTzpbP4RVSrpEikbmdJobCvhE3g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!--BOX ICONS-->
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

    <link rel="stylesheet" href="~/Content/app.css" />

    <link rel="stylesheet" href="~/Content/grid.css" />

    <link rel="stylesheet" href="~/Content/description.css" />






    <!--<style>-->
    @*    .img_center {
            width: 20% !important; /* Set the maximum width to 100% of the parent container */
            height: auto;
            padding:20%;
        }*@

    <!--</style>-->

    <style>
   @* .description-textarea, .toggle_on_p {*@
    .description-textarea {
        color: gray;
        letter-spacing: 1px;
        line-height: 28px;
        font-size: 18px;
        width: 600px;
        height: 250px;
        background-color: transparent;
        border: none;
    }

    .toggle_on_h2 {
        font-size: 45px;
        background-color: transparent;
        border:none;
        color: #ffffff;
        border:none;
        font-weight: bold;
    }



            label {
                display: block;
                width: 54px;
                height: 32px;
                @*  margin: 0px auto;*@
                margin: 0px;
                border-radius: 100px;
                transition: all 0.2s ease-in-out;
                -webkit-transition: all 0.2s ease-in-out;
                background-color: #E6E9EC;
                cursor: pointer;
            }

.myflex input {
  display: none;
}


/* The toggle */

.i_circle {
  height: 28px;
  width: 28px;
  background: #ffffff;
  display: inline-block;
  border-radius: 100px;
  margin-top: 2px;
  margin-left: 2px;
  transition: all 0.2s ease-in-out;
  -webkit-transition: all 0.2s ease-in-out;
  pointer-events: none;
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);
}

label:hover>i {
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.20);
  transform: scale(1.01);
}

input:checked+label>i {
  margin-left: 24px;
}

label:active {
  background-color: #A6B9CB;
}

label:active>i {
  width: 34px;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.20);
}

input:checked+label:active>i {
  margin-left: 18px;
}

input:checked+label {
@*  background-color: #008FFF;*@
  background-color: #6AB547;
}

    .myflex {
        display: flex;
        align-items: center;
        justify-items: center;
        gap: 12px;
        margin-top: -12px;
        font-size: 22px
    }

   @* .flame-text {
        font-size: 36px;
        font-weight: bold;
        color: #f5f5f5;
        text-shadow: 0px -2px 4px #fff, 0px -2px 10px #FF3, 0px -10px 20px #F90, 0px -20px 40px #C33;
    }*@


    .flame-text {
    font-size: 36px;
    font-weight: bold;
    color: #f5f5f5;
    text-shadow: 0px -2px 4px #fff, 0px -2px 10px #FF3, 0px -10px 20px #F90, 0px -20px 40px #C33;
    animation: shadow-animation 1s ease-in-out infinite alternate;
  }

 @@keyframes shadow-animation {
    0% {
      text-shadow: 0px -2px 4px #fff, 0px -2px 10px #FF3, 0px -10px 20px #F90, 0px -20px 40px #C33;
    }
    100% {
      text-shadow: 0px -2px 6px #fff, 0px -2px 14px #FF3, 0px -12px 24px #F90, 0px -24px 48px #C33;
    }
  }


    .flexx-container {
        display: flex;
        align-content: center;
        margin-top: -12px;
    }

        .flexx-container > div {
           width:120px;
          @*  margin-right: 10px; /* Adjust as needed to create spacing between inputs */*@
        }

    .toggle_off_h4 {
        font-size: 22px;
        color:#ffffff;
        background-color:transparent;
        border:none;
        font-weight: bold;
        width:auto;
    }

    .toggle_off_h4_div2{
        margin-left:-30px;
    }

    .toggle_off_p {
        color: #ffffff;
        font-weight: 600;
        font-size:16px;
        background-color: transparent;
        border: none;
        width:18px;
    }


    .rate {
        display:flex;
        justify-content:left;
        flex-direction:row-reverse;
        height: 46px;
        padding: 0 21%;
    }

        .rate:not(:checked) > input {
            position: absolute;
            top: -9999px;
        }

        .rate:not(:checked) > label {
            float: right;
            width: 1em;
            height:2em;
            overflow: hidden;
            white-space: nowrap;
            cursor: pointer;
            font-size: 30px;
            color: #ccc;
            background-color:transparent;
        }

            .rate:not(:checked) > label:before {
                content: '★ ';
            }

        .rate > input:checked ~ label {
            color: #ffc700;
        }

        .rate:not(:checked) > label:hover,
        .rate:not(:checked) > label:hover ~ label {
            color: #deb217;
        }

        .rate > input:checked + label:hover,
        .rate > input:checked + label:hover ~ label,
        .rate > input:checked ~ label:hover,
        .rate > input:checked ~ label:hover ~ label,
        .rate > label:hover ~ input:checked ~ label {
            color: #c59b08;
        }




    </style>

</head>
<body>

    @*  @Html.Partial("~/Views/Shared/_Navbar.cshtml")*@
    @{ Html.RenderAction("Navbar", "Account");}

    <section class="comic-description">
        <div class="main">


            @* @{
                    // Retrieve the unique identifier from the query parameter
                    string identifier = Request.QueryString["identifier"];

                    // Retrieve the serialized data from session using the identifier
                    string serializedComic = (string)System.Web.HttpContext.Current.Session[identifier];

                    // Deserialize the data back into a Comic object
                    Comics comic = JsonConvert.DeserializeObject<SSL.Models.Comics>(serializedComic);

                    ComicFormViewModel comics = new ComicFormViewModel();
                    Model.Comic = comic;
                }*@


            <img src="~/Media/turnjs4/samples/docs/@Model.Comic.ReadOnline/1.jpg" alt="">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <div class="description">
                @if (User.IsInRole("Admin"))
                {
                    <div class="myflex">
                        @*Edit*@
                        <h3 class="flame-text">Edit Mode</h3>
                        <!-- The Toggle -->
                        <input type="checkbox" id="toggly">
                        <label for="toggly"><i class="i_circle"></i></label>
                    </div>
                }









                @* <p>@comic.Summary</p>*@

                @*<div style="width: 720px;">
            <p>@Html.Raw(comic.Summary)</p>
        </div>*@

                <div id="toggle_off_text">
                    <h2 style="font-size:45px">@Model.Comic.Name</h2>
                    <div class="myflex">
                        <h4>@Model.Comic.Genre ,</h4>
                        @if (Model.Comic.Publisher == "Marvel")
                        {
                            <img style="width:70px" src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Marvel_Logo.svg/2560px-Marvel_Logo.svg.png" />
                        }
                        else if (Model.Comic.Publisher == "DC")
                        {
                            <img style="width:50px" src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/DC_Comics_logo.svg/768px-DC_Comics_logo.svg.png" />
                        }
                        else
                        {
                            <img style="width:70px" src="https://th.bing.com/th/id/R.fba51dd70a596d69218f9df6c994c3de?rik=YEAxBvSy216UPQ&riu=http%3a%2f%2fwallpapercave.com%2fwp%2fpVgQFsp.jpg&ehk=MqBpPT%2f0Y3VhCB7EshltyvVcL1cE3gGDNgbau%2b%2fsy6A%3d&risl=&pid=ImgRaw&r=0" />
                        }

                        @*<h4>@comic.Publisher</h4>*@
                    </div>

                    <div class="comic-infos" style="text-align: center;">



                        <div class="comic-info">
                            <i class="bx bxs-star"></i>
                            <span style="font-size: medium;">8.5</span>
                        </div>
                        <div class="comic-info">
                            <i class="bx bxs-book"></i>
                            <span style="font-size: medium;">@Model.Comic.Pages</span>
                        </div>
                        <div class="comic-info">
                            <span style="font-size: medium;">12+</span>
                        </div>
                    </div>
                    <p>
                        @Model.Comic.Summary
                    </p>
                </div>

                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <script>
                        // Get the checkbox element by its ID
                        var checkbox = document.getElementById("toggly");

                        // Add an event listener to detect changes in the checkbox state
                        checkbox.addEventListener("change", function () {
                            if (checkbox.checked) {
                                document.getElementById("toggle_on_text").style.display = 'block';
                                document.getElementById("toggle_off_text").style.display = 'none';
                            } else {
                                // Checkbox is not checked
                                document.getElementById("toggle_on_text").style.display = 'none';
                                document.getElementById("toggle_off_text").style.display = 'block';
                            }
                        });
                    </script>
                }

                <div class="desc" id="toggle_on_text" style="display:none">

                    @using (Html.BeginForm("Update", "Comics"))
                    {
                        @Html.ValidationSummary(true, "Please fix the following errors", new { @class = "text-danger" })


                        @* <h2 style="font-size:45px">
                    @Html.TextBoxFor(m => Model.Comics.Name, new { @class = "form-control" })
                </h2>*@

                        @Html.TextBoxFor(m => Model.Comic.Name, new { @class = "toggle_on_h2" })

                        @Html.ValidationMessageFor(m => Model.Comic.Name, "", new { @class = "text-danger" })


                        @*   <div class="form-group">
                    @Html.LabelFor(m => m.Comic.GenreDropDownId)
                    @Html.DropDownListFor(m => m.Comic.GenreDropDownId, new SelectList(Model.GenresDropDown, "Id", "Name"), "Select a genre type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Comic.GenreDropDownId, "", new { @class = "text-danger" })
                </div>*@



                    <div class="flexx-container">
                        <div id="keydown">
                            @Html.TextBoxFor(m => Model.Comic.Genre, new { @class = "toggle_off_h4", @id = "genre" })
                            @Html.ValidationMessageFor(m => Model.Comic.Genre, "", new { @class = "text-danger" })
                        </div>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <div class="toggle_off_h4_div2">
                            @Html.TextBoxFor(m => Model.Comic.Publisher, new { @class = "toggle_off_h4" })
                            @Html.ValidationMessageFor(m => Model.Comic.Publisher, "", new { @class = "text-danger" })
                        </div>
                    </div>

                        <div class="comic-infos" style="text-align: center;">



                            <div class="comic-info">
                                <i class="bx bxs-star"></i>
                                <span style="font-size: medium;">8.5</span>
                            </div>
                            <div class="comic-info">
                                <i class="bx bxs-book"></i>
                                <span style="font-size: medium;">
                                    @Html.TextBoxFor(m => Model.Comic.Pages, new { @class = "toggle_off_p" })
                                    @Html.ValidationMessageFor(m => Model.Comic.Pages, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="comic-info">
                                <span style="font-size: medium;">12+</span>
                            </div>
                        </div>


                        @Html.TextAreaFor(m => Model.Comic.Summary, new { @class = "form-control description-textarea" })
                        @Html.ValidationMessageFor(m => Model.Comic.Summary, "", new { @class = "text-danger" })









                        @*<input type="file" name="myfolder" webkitdirectory mozdirectory />*@

                        @*<input type="file" name="file" />*@


                        @Html.HiddenFor(m => Model.Comic.Id)
                        <input value="detailsKey" name="detailsKey" type="hidden" />
                        @Html.AntiForgeryToken()
                        <button id="comic_delete" type="submit">Save Changes</button>
                        <br /><br />
                    }

                </div>



                @if (User.Identity.IsAuthenticated && (User.IsInRole("Silver") || (User.IsInRole("Gold"))))
                {
                    <a target="_blank" href="~/Media/turnjs4/samples/docs/index.html?val=@Model.Comic.ReadOnline" class="btn btn-hover">
                        <i class="bx bxs-right-arrow"></i>
                        <span>Read now</span>
                    </a>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Free"))
                {
                    <a target="_blank" href="~/Media/turnjs4/samples/docs/index.html?val=@Model.Comic.ReadOnline" class="btn btn-hover" onclick="window.location.href = '@Url.Action("ReadTrials", "FreeTrials",new {comicUrl=Model.Comic.ReadOnline })';">

                        <i class="bx bxs-right-arrow"></i>
                        <span>Read now</span>
                    </a>
                }
                else
                {
                    <a href="javascript:void(0);" class="btn btn-hover" onclick="alert('Login to access this feature');window.location.href='@Url.Action("Login", "Account")'">
                        <i class="bx bxs-right-arrow"></i>
                        <span>Read now</span>
                    </a>

                }

                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;

                @if (User.Identity.IsAuthenticated && User.IsInRole("Gold"))
                {
                    <a href="~/Media/Comics/@Model.Comic.Download" class="btn btn-hover" download>
                        <i class="bx bxs-right-arrow"></i>&nbsp;
                        <span>Download</span>
                    </a>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Free"))
                {
                    <a href="javascript:void(0);" class="btn btn-hover" onclick="alert('Upgrade your plan to access this feature')" ;window.location.href='@Url.Action("FreeTrials", "DownloadTrials")' ;>
                        <i class="bx bxs-right-arrow"></i>&nbsp;
                        <span>Download</span>
                    </a>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Silver"))
                {

                    <a href="~/Media/Comics/@Model.Comic.Download" class="btn btn-hover" onclick="window.location.href = '@Url.Action("DownloadTrials", "FreeTrials")" download>
                        <i class="bx bxs-right-arrow"></i>&nbsp;
                        <span>Download</span>
                    </a>
                }
                else
                {
                    <a href="javascript:void(0);" class="btn btn-hover" onclick="alert('Login to access this feature');window.location.href='@Url.Action("Login", "Account")'">
                        <i class="bx bxs-right-arrow"></i>&nbsp;
                        <span>Download</span>
                    </a>

                }

            </div>
        </div>
        @*
            @using (Html.BeginForm("YourControllerMethod", "YourController", FormMethod.Post, new { id = "form" }))
            {*@
        <!-- Your other form elements -->
        @*@Html.RadioButton("rate", "5", new { id = "star5", onclick = "form.submit()" })*@
        <!-- Other radio buttons and form elements -->
        <!-- Your submit button or any other way to submit the form -->
        @*}*@


        <form action="@Url.Action("Save", "Ratings")" method="post" id="ratingsForm">
            <div class="rate">
                <input type="hidden" name="comicId" value="@Model.Comic.Id" />
                <input type="hidden" id="stars" name="stars" value="" />

                @for (int i = 5; i >= 1; i--)
                {
                    var isChecked = Model.Rating != null && Model.Rating.Stars == i ? "checked" : "";

                    <input type="radio" id="star@(i)"value="@i" @isChecked onclick='ratingsCheck(@i)' />
                    <label for="star@(i)" title="text">@i stars</label>
                }
            </div>
        </form>
    </section>







    <!-- EPISODES -->
    <section class="episodes">
        <div class="chamber">
            <h2 style="font-size:xx-large">Comic Preview</h2>
            <ul>
                <li><img width="220px" src="~/Media/turnjs4/samples/docs/@Model.Comic.ReadOnline/1.jpg" /></li>
                <li></li>
                <li></li>
                <li><img width="220px" src="~/Media/turnjs4/samples/docs/@Model.Comic.ReadOnline/2.jpg" /></li>
                <li></li>
                <li></li>
                <li><img width="220px" src="~/Media/turnjs4/samples/docs/@Model.Comic.ReadOnline/3.jpg" /></li>
                <li></li>
                <li></li>
                <li><img width="220px" src="~/Media/turnjs4/samples/docs/@Model.Comic.ReadOnline/4.jpg" /></li>
                <li></li>
                <li></li>
                <li><img width="220px" src="~/Media/turnjs4/samples/docs/@Model.Comic.ReadOnline/5.jpg" /></li>
            </ul>
        </div>
    </section>





    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
    <!--OWL CAROUSEL-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js" integrity="sha512-bPs7Ae6pVvhOSiIcyUClR7/q2OAsRiovw4vAkX+zJbw3ShAeeqezq50RIIcIURq7Oa20rW2n2q+fyXBNcU9lrw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!--APP SCRIPT-->
    <script src="~/Content/app.js"></script>

    <script>
        document.getElementById("genre").addEventListener("input", function () {
            // Get the first div
            var div1 = document.getElementById("keydown");

            // Get the current margin-right and convert it to a number
            var currentMarginRight = parseInt(getComputedStyle(div1).marginRight) || 0;

            // Increase the margin-right by 5px
            var newMarginRight = currentMarginRight + 10;

            // Set the updated margin-right back to the div
            div1.style.marginRight = newMarginRight + "px";
        });
    </script>

    <script>
@*        We can also addEvenyListener on document.getElementById on submit button *@

        document.querySelector("form").addEventListener("submit", function (e) {
            if (!confirm("Are you sure you want to delete this record?")) {
                e.preventDefault(); // Prevent form submission if the user cancels
            }
        });
    </script>

    <script>
    function ratingsCheck(mystars) {
        var userAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();
        var isSilverOrGold = @((User.IsInRole("Silver") || User.IsInRole("Gold")).ToString().ToLower());


        if (userAuthenticated && isSilverOrGold) {
            document.getElementById("stars").value = mystars;
            document.getElementById("ratingsForm").submit();
           
        } else if (userAuthenticated && !isSilverOrGold) {
            alert("Only Silver and Gold Members can give Ratings. Upgrade your plan!");
            window.location.href = '@Url.Action("PricingList", "Comics")';
        } else {
            alert("Login to continue...");
            window.location.href = '@Url.Action("Login", "Account")';
        }
    }
    </script>


</body>
</html>
